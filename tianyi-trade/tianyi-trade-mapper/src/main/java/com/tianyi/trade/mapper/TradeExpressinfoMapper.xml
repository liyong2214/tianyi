<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianyi.trade.mapper.TradeExpressinfoMapper">
  <resultMap id="BaseResultMap" type="com.tianyi.trade.model.TradeExpressinfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="express_id" jdbcType="BIGINT" property="expressId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="express_type" jdbcType="INTEGER" property="expressType" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="express_cost" jdbcType="DECIMAL" property="expressCost" />
    <result column="remitter" jdbcType="VARCHAR" property="remitter" />
    <result column="express_address" jdbcType="VARCHAR" property="expressAddress" />
    <result column="postcode" jdbcType="VARCHAR" property="postcode" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="receiver_email" jdbcType="VARCHAR" property="receiverEmail" />
    <result column="receiver_contact" jdbcType="VARCHAR" property="receiverContact" />
    <result column="receiver_mobile" jdbcType="VARCHAR" property="receiverMobile" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, express_id, order_id, username, express_type, pay_type, express_cost, remitter, 
    express_address, postcode, receiver, receive_time, receiver_address, receiver_email, 
    receiver_contact, receiver_mobile, note, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.tianyi.trade.model.TradeExpressinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_expressinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_expressinfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trade_expressinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tianyi.trade.model.TradeExpressinfoExample">
    delete from trade_expressinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tianyi.trade.model.TradeExpressinfo" useGeneratedKeys="true">
    insert into trade_expressinfo (express_id, order_id, username, 
      express_type, pay_type, express_cost, 
      remitter, express_address, postcode, 
      receiver, receive_time, receiver_address, 
      receiver_email, receiver_contact, receiver_mobile, 
      note, create_time, update_time
      )
    values (#{expressId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, 
      #{expressType,jdbcType=INTEGER}, #{payType,jdbcType=INTEGER}, #{expressCost,jdbcType=DECIMAL}, 
      #{remitter,jdbcType=VARCHAR}, #{expressAddress,jdbcType=VARCHAR}, #{postcode,jdbcType=VARCHAR}, 
      #{receiver,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, #{receiverAddress,jdbcType=VARCHAR}, 
      #{receiverEmail,jdbcType=VARCHAR}, #{receiverContact,jdbcType=VARCHAR}, #{receiverMobile,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tianyi.trade.model.TradeExpressinfo" useGeneratedKeys="true">
    insert into trade_expressinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expressId != null">
        express_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="expressType != null">
        express_type,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="expressCost != null">
        express_cost,
      </if>
      <if test="remitter != null">
        remitter,
      </if>
      <if test="expressAddress != null">
        express_address,
      </if>
      <if test="postcode != null">
        postcode,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="receiveTime != null">
        receive_time,
      </if>
      <if test="receiverAddress != null">
        receiver_address,
      </if>
      <if test="receiverEmail != null">
        receiver_email,
      </if>
      <if test="receiverContact != null">
        receiver_contact,
      </if>
      <if test="receiverMobile != null">
        receiver_mobile,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expressId != null">
        #{expressId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="expressType != null">
        #{expressType,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="expressCost != null">
        #{expressCost,jdbcType=DECIMAL},
      </if>
      <if test="remitter != null">
        #{remitter,jdbcType=VARCHAR},
      </if>
      <if test="expressAddress != null">
        #{expressAddress,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null">
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiverAddress != null">
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverEmail != null">
        #{receiverEmail,jdbcType=VARCHAR},
      </if>
      <if test="receiverContact != null">
        #{receiverContact,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null">
        #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tianyi.trade.model.TradeExpressinfoExample" resultType="java.lang.Long">
    select count(*) from trade_expressinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trade_expressinfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.expressId != null">
        express_id = #{record.expressId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.expressType != null">
        express_type = #{record.expressType,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.expressCost != null">
        express_cost = #{record.expressCost,jdbcType=DECIMAL},
      </if>
      <if test="record.remitter != null">
        remitter = #{record.remitter,jdbcType=VARCHAR},
      </if>
      <if test="record.expressAddress != null">
        express_address = #{record.expressAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.postcode != null">
        postcode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null">
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveTime != null">
        receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiverAddress != null">
        receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverEmail != null">
        receiver_email = #{record.receiverEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverContact != null">
        receiver_contact = #{record.receiverContact,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverMobile != null">
        receiver_mobile = #{record.receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trade_expressinfo
    set id = #{record.id,jdbcType=BIGINT},
      express_id = #{record.expressId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      express_type = #{record.expressType,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=INTEGER},
      express_cost = #{record.expressCost,jdbcType=DECIMAL},
      remitter = #{record.remitter,jdbcType=VARCHAR},
      express_address = #{record.expressAddress,jdbcType=VARCHAR},
      postcode = #{record.postcode,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      receiver_email = #{record.receiverEmail,jdbcType=VARCHAR},
      receiver_contact = #{record.receiverContact,jdbcType=VARCHAR},
      receiver_mobile = #{record.receiverMobile,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianyi.trade.model.TradeExpressinfo">
    update trade_expressinfo
    <set>
      <if test="expressId != null">
        express_id = #{expressId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="expressType != null">
        express_type = #{expressType,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="expressCost != null">
        express_cost = #{expressCost,jdbcType=DECIMAL},
      </if>
      <if test="remitter != null">
        remitter = #{remitter,jdbcType=VARCHAR},
      </if>
      <if test="expressAddress != null">
        express_address = #{expressAddress,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null">
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiverAddress != null">
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverEmail != null">
        receiver_email = #{receiverEmail,jdbcType=VARCHAR},
      </if>
      <if test="receiverContact != null">
        receiver_contact = #{receiverContact,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null">
        receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tianyi.trade.model.TradeExpressinfo">
    update trade_expressinfo
    set express_id = #{expressId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      express_type = #{expressType,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      express_cost = #{expressCost,jdbcType=DECIMAL},
      remitter = #{remitter,jdbcType=VARCHAR},
      express_address = #{expressAddress,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      receiver_email = #{receiverEmail,jdbcType=VARCHAR},
      receiver_contact = #{receiverContact,jdbcType=VARCHAR},
      receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>